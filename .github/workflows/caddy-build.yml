name: build
on:
  workflow_dispatch:

env:
  container_name: techmoe-caddy
  binary_path: /usr/bin/caddy

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        arch:
          - linux/arm64
          - linux/amd64
          - linux/arm
          # - linux/386
          - linux/ppc64le
          - linux/s390x
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Prepare buildah
        run: |-
          sudo apt-get update
          sudo apt-get install buildah qemu-user-static podman -y
          buildah -v
      - name: Generating some names
        run: |-
          export container_name_with_arch="${container_name}-$(echo ${{ matrix.arch }} | sed -e "s/\//-/g" )"
          echo "container_name_with_arch=$container_name_with_arch" >> $GITHUB_ENV
          echo "target container name: $container_name_with_arch"
      - name: Build and export container image
        run: |-
          buildah bud -t ${{ env.container_name_with_arch }} --platform ${{ matrix.arch }} .
          # export image
          mkdir -p target/images
          buildah push $container_name_with_arch docker-archive:target/images/${{ env.container_name_with_arch }}.tar
      - name: Export binary
        run: |-   
          # export binary
          mkdir -p target/binaries
          echo "+ Re-import image with root permission"
          sudo buildah pull docker-archive:target/images/${{ env.container_name_with_arch }}.tar
          echo "+ Get the container from image"
          export container_name=$(sudo buildah from ${{ env.container_name_with_arch }})
          echo "Container name: $container_name"
          echo "+ Mount and copy binary from container"
          export mount_path=$(sudo buildah mount $container_name)
          echo "mount path: $mount_path"
          sudo cp $mount_path/$binary_path target/binaries/${{ env.container_name_with_arch }}
          echo
          tree -h
      - uses: actions/upload-artifact@v3
        name: upload artifact
        with:
          name: target
          path: target
  
  push-to-registry:
    runs-on: ubuntu-22.04
    needs:
      - build-linux
    steps:
      - uses: actions/download-artifact@v2
        name: Download artifacts
        with:
          name: target
          path: target
      - name: Listing
        run: |-
          ls -lah
          tree -h
      - name: Login docker registry  (ghcr.io)
        run: |-
          # new login with new container registry url and PAT
          # login to Github ghcr.io
          echo ${{ secrets.GITHUB_TOKEN }} | buildah login -u $GITHUB_ACTOR --password-stdin ghcr.io
      - name: Create manifest and add image from archs
        run: |-
          buildah manifest create $container_name
          for f in $(ls target/images)
          do
            export arch=$(echo $f | sed -r -e "s/^(.+)-(.+)-(.+)\.tar$/\2\/\3/g")
            echo "Run command: 'buildah manifest add $container_name docker-archive:target/images/$f --arch $arch'"
            buildah manifest add $container_name docker-archive:target/images/$f --arch $arch
          done
          echo
          buildah manifest inspect $container_name
      - name: Push image to registry
        run: |-
          echo "+ Run command: 'buildah manifest push --all $container_name docker://ghcr.io/${GITHUB_REPOSITORY}:latest'"
          buildah manifest push --all $container_name docker://ghcr.io/${GITHUB_REPOSITORY}:latest

  upload-release:
    runs-on: ubuntu-22.04
    needs:
      - build-linux
    steps:
      - name: Generate names
        run: |-
          echo "RELEASE_NAME=v$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
      - uses: actions/download-artifact@v2
        name: Download artifacts
        with:
          name: target
          path: target
      - name: Upload releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "target/binaries/*"
          name: ${{ env.RELEASE_NAME }}
          tag: ${{ env.RELEASE_NAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
